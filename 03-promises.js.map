{"version":3,"file":"03-promises.js","sources":["../src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\nlet counterPosition = null;\n\nformRef.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  const form = e.target;\n  let delayValue = Number(form.elements.delay.value);\n  const stepValue = Number(form.elements.step.value);\n  const amountValue = Number(form.elements.amount.value);\n  for (\n    let counterPosition = 1;\n    counterPosition <= amountValue;\n    counterPosition += 1\n  ) {\n    createPromise(counterPosition, delayValue);\n\n    delayValue += stepValue;\n  }\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["formRef","handleSubmit","e","form","delayValue","stepValue","amountValue","counterPosition","createPromise","position","delay","shouldResolve"],"mappings":"wFAAA,MAAMA,EAAU,SAAS,cAAc,OAAO,EAG9CA,EAAQ,iBAAiB,SAAUC,CAAY,EAE/C,SAASA,EAAaC,EAAG,CACvBA,EAAE,eAAgB,EAClB,MAAMC,EAAOD,EAAE,OACf,IAAIE,EAAa,OAAOD,EAAK,SAAS,MAAM,KAAK,EACjD,MAAME,EAAY,OAAOF,EAAK,SAAS,KAAK,KAAK,EAC3CG,EAAc,OAAOH,EAAK,SAAS,OAAO,KAAK,EACrD,QACMI,EAAkB,EACtBA,GAAmBD,EACnBC,GAAmB,EAEnBC,EAAcD,EAAiBH,CAAU,EAEzCA,GAAcC,EAEhBF,EAAK,MAAO,CACd,CAEA,SAASK,EAAcC,EAAUC,EAAO,CACtC,MAAMC,EAAgB,KAAK,OAAM,EAAK,GACtC,WAAW,IAAM,CAEb,QAAQ,IADNA,EACU,uBAAuBF,CAAQ,OAAOC,CAAK,KAE3C,sBAAsBD,CAAQ,OAAOC,CAAK,IAFK,CAI9D,EAAEA,CAAK,CACV"}